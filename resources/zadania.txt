1. Napisanie testów dla metod do testowania klasyfikatora:

 * napisanie conajmniej 3 przypadków testowych dla każdej z metod,

 * Im trudniej jest testować to oznacza, że metody są źle zbudowane.

2. Optymalizacja algorytmu.

 * optymalizacja dict class

3. Lepsze poukładanie programu w metodach.

4. Understand the data much deeper

 * maybe should we plot each data category to understand the influence of that category?

 * compare the data by ploting categories

5. Pisanie dokumentacji pod każdą racjonalną metodą.

6. Napisanie metody do zliczania elementów aby otrzymać wiarygodny rozklad prawdopodobieństwa danej cechy.

 * na podstawie rozkładu cechy należy ustalić, czy można wg. niej dostać prop.

3.08.2017r.

1. Napisanie dobrego feature parser'a

2. Dlaczego jest tak duża różnica w wynikach?

3. Optymalizacja kodu:

 * po pierwszej akceptowalnej wersji programu,

 * usunięcie nie potzebnych metod,

 * optymalizacja skryptu main

 * optymalizacja metod bayesowskich:

4. Obliczaenie pełnego credibility dla zadania

5. Obliczenie prawdopodobieństwa przynależności do danej klasy.

6. Obliczenie zadanie dla innego przypadku

 * dla trzech innych przypadków

 * dla przypadku z kilkoma klasami

7. Jak zwiększyć prawdobodobieństwo wybrania tego, że element przynależy do danej klasy:

8. Lepsze przestudiowanie teorii bayesa,

9.